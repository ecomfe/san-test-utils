(window.webpackJsonp=window.webpackJsonp||[]).push([[63,3],{156:function(n,s,a){var t=a(1),p=a(97),o=a(25).default;n.exports=a(25),n.exports.default=t(o,p,[])},25:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,p,o,e=a(0);class c extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}o={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(2))},97:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="createwrapper()">createWrapper()</h1> <hr/> <ul> <li> <p><strong>参数</strong>：</p> <ul> <li><code>{vm|HTMLElement} node</code></li> <li><code>{Object} options</code> <ul> <li><code>{boolean} attachToDocument</code></li> </ul> </li> </ul> </li> <li> <p><strong>返回值</strong>：<code>{Wrapper}</code></p> </li> <li> <p><strong>用法</strong>：</p> </li> </ul> <p><code>createWrapper</code> 为一个被挂载的 San 实例或一个 HTML 元素创建一个 <code>Wrapper</code>。</p> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>createWrapper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">createWrapper</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '}}]);