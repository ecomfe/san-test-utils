(window.webpackJsonp=window.webpackJsonp||[]).push([[73,13],{137:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="stubs">stubs</h1> <hr/> <ul> <li><strong>类型</strong>：<code>{[name: string]: Component | boolean} | Array&lt;string&gt;</code></li> </ul> <p>将子组件存根。可以是一个要存根的组件名的数组或对象。如果 stubs 是一个数组，则每个存根都是一个 <code>&lt;${component name}-stub&gt;</code>。</p> <ul> <li><strong>示例</strong>：</li> </ul> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>attach<span class="token punctuation">,</span> shallowAttach<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n\n<span class="token function">attach</span><span class="token punctuation">(</span>component<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">stubs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'registered-component\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">shallowAttach</span><span class="token punctuation">(</span>component<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">stubs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 使用一个特定的实现作为存根</span>\n        <span class="token string-property property">\'registered-component\'</span><span class="token operator">:</span> foo<span class="token punctuation">,</span>\n        <span class="token comment">// 使用创建默认的实现作为存根。</span>\n        <span class="token comment">// 这里默认存根的组件名是 `another-component`。</span>\n        <span class="token comment">// 默认存根是 `&lt;${the component name of default stub}-stub>`。</span>\n        <span class="token string-property property">\'another-component\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},196:function(n,s,a){var t=a(1),o=a(137),p=a(65).default;n.exports=a(65),n.exports.default=t(p,o,[])},65:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,o,p,e=a(0);class c extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}p={},(o="components")in(t=c)?Object.defineProperty(t,o,{value:p,enumerable:!0,configurable:!0,writable:!0}):t[o]=p}.call(this,a(2))}}]);