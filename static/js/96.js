(window.webpackJsonp=window.webpackJsonp||[]).push([[96,37],{158:function(e,o,n){var t=n(1),d=n(99),c=n(27).default;e.exports=n(27),e.exports.default=t(c,d,[])},27:function(e,o,n){"use strict";n.r(o),function(e){n.d(o,"default",(function(){return l}));var t,d,c,i=n(0);class l extends i.a{inited(){e.hub&&e.hub.fire&&e.hub.fire("changed",{level:0,children:[{level:3,title:"`vm`",hash:"vm"},{level:3,title:"`el`",hash:"el"},{level:3,title:"`options`",hash:"options"}]})}}c={},(d="components")in(t=l)?Object.defineProperty(t,d,{value:c,enumerable:!0,configurable:!0,writable:!0}):t[d]=c}.call(this,n(2))},99:function(e,o){e.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="%E5%B1%9E%E6%80%A7">属性</h1> <hr/> <p>San Test Utils 是一个基于包裹器的 API。</p> <p>一个 <code>Wrapper</code> 是一个包括了一个挂载组件，以及可用于该组件测试的方法。</p> <h3 id="vm"><strong><code>vm</code></strong></h3> <p><code>Component</code>：这是个 San 实例。你可以通过 wrapper.vm 访问一个实例所有的方法和属性。只有 San 组件包裹器或绑定了 San 组件包裹器的 HTMLElement 中才有该属性。</p> <h3 id="el"><strong><code>el</code></strong></h3> <p><code>HTMLElement</code>：包裹器的根 DOM 节点</p> <h3 id="options"><strong><code>options</code></strong></h3> <p><code>options.attachedToDocument&lt;boolean&gt;</code>：如果组件在渲染之后被添加到了文档上则为真</p> </div></div> '}}]);