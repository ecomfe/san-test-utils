!function(n){function a(a){for(var t,p,r=a[0],c=a[1],u=a[2],i=0,d=[];i<r.length;i++)p=r[i],Object.prototype.hasOwnProperty.call(e,p)&&e[p]&&d.push(e[p][0]),e[p]=0;for(t in c)Object.prototype.hasOwnProperty.call(c,t)&&(n[t]=c[t]);for(l&&l(a);d.length;)d.shift()();return o.push.apply(o,u||[]),s()}function s(){for(var n,a=0;a<o.length;a++){for(var s=o[a],t=!0,r=1;r<s.length;r++){var c=s[r];0!==e[c]&&(t=!1)}t&&(o.splice(a--,1),n=p(p.s=s[0]))}return n}var t={},e={3:0,63:0},o=[];function p(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return n[a].call(s.exports,s,s.exports,p),s.l=!0,s.exports}p.e=function(){return Promise.resolve()},p.m=n,p.c=t,p.d=function(n,a,s){p.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:s})},p.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},p.t=function(n,a){if(1&a&&(n=p(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var s=Object.create(null);if(p.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var t in n)p.d(s,t,function(a){return n[a]}.bind(null,t));return s},p.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return p.d(a,"a",a),a},p.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},p.p="/san-test-utils/";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=a,r=r.slice();for(var u=0;u<r.length;u++)a(r[u]);var l=c;o.push([156,0]),s()}({156:function(n,a,s){var t=s(1),e=s(97),o=s(25).default;n.exports=s(25),n.exports.default=t(o,e,[])},25:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return r}));var t,e,o,p=s(0);class r extends p.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}o={},(e="components")in(t=r)?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o}.call(this,s(2))},97:function(n,a){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="createwrapper()">createWrapper()</h1> <hr/> <ul> <li> <p><strong>参数</strong>：</p> <ul> <li><code>{vm|HTMLElement} node</code></li> <li><code>{Object} options</code> <ul> <li><code>{boolean} attachToDocument</code></li> </ul> </li> </ul> </li> <li> <p><strong>返回值</strong>：<code>{Wrapper}</code></p> </li> <li> <p><strong>用法</strong>：</p> </li> </ul> <p><code>createWrapper</code> 为一个被挂载的 San 实例或一个 HTML 元素创建一个 <code>Wrapper</code>。</p> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>createWrapper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">createWrapper</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '}});