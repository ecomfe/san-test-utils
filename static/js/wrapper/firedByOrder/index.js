!function(n){function a(a){for(var t,o,c=a[0],r=a[1],u=a[2],i=0,f=[];i<c.length;i++)o=c[i],Object.prototype.hasOwnProperty.call(e,o)&&e[o]&&f.push(e[o][0]),e[o]=0;for(t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t]);for(l&&l(a);f.length;)f.shift()();return p.push.apply(p,u||[]),s()}function s(){for(var n,a=0;a<p.length;a++){for(var s=p[a],t=!0,c=1;c<s.length;c++){var r=s[c];0!==e[r]&&(t=!1)}t&&(p.splice(a--,1),n=o(o.s=s[0]))}return n}var t={},e={35:0,94:0},p=[];function o(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return n[a].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.e=function(){return Promise.resolve()},o.m=n,o.c=t,o.d=function(n,a,s){o.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:s})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,a){if(1&a&&(n=o(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var t in n)o.d(s,t,function(a){return n[a]}.bind(null,t));return s},o.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(a,"a",a),a},o.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},o.p="/san-test-utils/";var c=window.webpackJsonp=window.webpackJsonp||[],r=c.push.bind(c);c.push=a,c=c.slice();for(var u=0;u<c.length;u++)a(c[u]);var l=r;p.push([163,0]),s()}({104:function(n,a){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="firedbyorder">firedByOrder</h1> <hr/> <p>返回一个包含由 <code>Wrapper</code> <code>vm</code> 触发的自定义事件的数组。</p> <ul> <li> <p><strong>返回值</strong>：<code>Array&lt;{name: string, args: Array&lt;any&gt;}&gt;</code></p> </li> <li> <p><strong>示例</strong>：</p> </li> </ul> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>attach<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">attach</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nwrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nwrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/*\n`wrapper.firedByOrder() 返回如下数组：\n[\n  {name: \'foo\', args: []},\n  {name: \'bar\', args: [123]}\n]\n*/</span>\n\n<span class="token comment">// 断言事件的触发顺序</span>\n<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">firedByOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> e<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'foo\'</span><span class="token punctuation">,</span> <span class="token string">\'bar\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},163:function(n,a,s){var t=s(1),e=s(104),p=s(32).default;n.exports=s(32),n.exports.default=t(p,e,[])},32:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return c}));var t,e,p,o=s(0);class c extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}p={},(e="components")in(t=c)?Object.defineProperty(t,e,{value:p,enumerable:!0,configurable:!0,writable:!0}):t[e]=p}.call(this,s(2))}});