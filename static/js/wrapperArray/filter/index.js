!function(n){function s(s){for(var a,p,r=s[0],c=s[1],l=s[2],i=0,f=[];i<r.length;i++)p=r[i],Object.prototype.hasOwnProperty.call(e,p)&&e[p]&&f.push(e[p][0]),e[p]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(n[a]=c[a]);for(u&&u(s);f.length;)f.shift()();return o.push.apply(o,l||[]),t()}function t(){for(var n,s=0;s<o.length;s++){for(var t=o[s],a=!0,r=1;r<t.length;r++){var c=t[r];0!==e[c]&&(a=!1)}a&&(o.splice(s--,1),n=p(p.s=t[0]))}return n}var a={},e={51:0,110:0},o=[];function p(s){if(a[s])return a[s].exports;var t=a[s]={i:s,l:!1,exports:{}};return n[s].call(t.exports,t,t.exports,p),t.l=!0,t.exports}p.e=function(){return Promise.resolve()},p.m=n,p.c=a,p.d=function(n,s,t){p.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:t})},p.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},p.t=function(n,s){if(1&s&&(n=p(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(p.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var a in n)p.d(t,a,function(s){return n[s]}.bind(null,a));return t},p.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return p.d(s,"a",s),s},p.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},p.p="/san-test-utils/";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=s,r=r.slice();for(var l=0;l<r.length;l++)s(r[l]);var u=c;o.push([186,0]),t()}({127:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="filter">filter</h1> <hr/> <p>用一个针对 <code>Wrapper</code> 的断言函数过滤 <code>WrapperArray</code>。</p> <p>该方法的行为和 <code>Array.prototype.filter</code> 相同。</p> <ul> <li> <p><strong>参数</strong>：</p> <ul> <li><code>{function} predicate</code></li> </ul> </li> <li> <p><strong>返回值</strong>：<code>{WrapperArray}</code></p> </li> </ul> <p>一个新的 <code>WrapperArray</code> 实例，该实例包含了经过断言函数处理后返回真值的 <code>Wrapper</code> 实例。</p> <ul> <li><strong>示例</strong>：</li> </ul> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>shallowAttach<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowAttach</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> filteredDivArray <span class="token operator">=</span> wrapper\n  <span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">w</span> <span class="token operator">=></span> <span class="token operator">!</span>w<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">\'filtered\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},186:function(n,s,t){var a=t(1),e=t(127),o=t(55).default;n.exports=t(55),n.exports.default=a(o,e,[])},55:function(n,s,t){"use strict";t.r(s),function(n){t.d(s,"default",(function(){return r}));var a,e,o,p=t(0);class r extends p.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}o={},(e="components")in(a=r)?Object.defineProperty(a,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):a[e]=o}.call(this,t(2))}});