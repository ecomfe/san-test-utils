!function(n){function s(s){for(var t,p,r=s[0],c=s[1],u=s[2],i=0,f=[];i<r.length;i++)p=r[i],Object.prototype.hasOwnProperty.call(e,p)&&e[p]&&f.push(e[p][0]),e[p]=0;for(t in c)Object.prototype.hasOwnProperty.call(c,t)&&(n[t]=c[t]);for(l&&l(s);f.length;)f.shift()();return o.push.apply(o,u||[]),a()}function a(){for(var n,s=0;s<o.length;s++){for(var a=o[s],t=!0,r=1;r<a.length;r++){var c=a[r];0!==e[c]&&(t=!1)}t&&(o.splice(s--,1),n=p(p.s=a[0]))}return n}var t={},e={55:0,114:0},o=[];function p(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,p),a.l=!0,a.exports}p.e=function(){return Promise.resolve()},p.m=n,p.c=t,p.d=function(n,s,a){p.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:a})},p.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},p.t=function(n,s){if(1&s&&(n=p(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(p.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var t in n)p.d(a,t,function(s){return n[s]}.bind(null,t));return a},p.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return p.d(s,"a",s),s},p.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},p.p="/san-test-utils/";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=s,r=r.slice();for(var u=0;u<r.length;u++)s(r[u]);var l=c;o.push([189,0]),a()}({130:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="issaninstance">isSanInstance</h1> <hr/> <p>判断 <code>WrapperArray</code> 的每个 <code>Wrapper</code> 都是 San 实例。</p> <ul> <li> <p><strong>返回值</strong>：<code>{boolean}</code></p> </li> <li> <p><strong>示例</strong>：</p> </li> </ul> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>attach<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">\'./bar\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">attach</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> barArray <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">expect</span><span class="token punctuation">(</span>barArray<span class="token punctuation">.</span><span class="token function">isSanInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},189:function(n,s,a){var t=a(1),e=a(130),o=a(58).default;n.exports=a(58),n.exports.default=t(o,e,[])},58:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return r}));var t,e,o,p=a(0);class r extends p.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}o={},(e="components")in(t=r)?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o}.call(this,a(2))}});