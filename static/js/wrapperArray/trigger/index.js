!function(n){function s(s){for(var t,p,c=s[0],r=s[1],l=s[2],i=0,k=[];i<c.length;i++)p=c[i],Object.prototype.hasOwnProperty.call(o,p)&&o[p]&&k.push(o[p][0]),o[p]=0;for(t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t]);for(u&&u(s);k.length;)k.shift()();return e.push.apply(e,l||[]),a()}function a(){for(var n,s=0;s<e.length;s++){for(var a=e[s],t=!0,c=1;c<a.length;c++){var r=a[c];0!==o[r]&&(t=!1)}t&&(e.splice(s--,1),n=p(p.s=a[0]))}return n}var t={},o={60:0,119:0},e=[];function p(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,p),a.l=!0,a.exports}p.e=function(){return Promise.resolve()},p.m=n,p.c=t,p.d=function(n,s,a){p.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:a})},p.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},p.t=function(n,s){if(1&s&&(n=p(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(p.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var t in n)p.d(a,t,function(s){return n[s]}.bind(null,t));return a},p.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return p.d(s,"a",s),s},p.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},p.p="/san-test-utils/";var c=window.webpackJsonp=window.webpackJsonp||[],r=c.push.bind(c);c.push=s,c=c.slice();for(var l=0;l<c.length;l++)s(c[l]);var u=r;e.push([194,0]),a()}({135:function(n,s){n.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="trigger">trigger</h1> <hr/> <p>为 <code>WrapperArray</code> 的每个 <code>Wrapper</code> DOM 节点都触发一个事件。</p> <p>注意：该包裹器必须包含一个 San 实例。</p> <ul> <li> <p><strong>参数</strong>：</p> <ul> <li><code>{string} eventType</code> 必填</li> <li><code>{Object} options</code> 可选</li> </ul> </li> <li> <p><strong>示例</strong>：</p> </li> </ul> <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>attach<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'san-test-utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> sinon <span class="token keyword">from</span> <span class="token string">\'sinon\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'./foo\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> clickHandler <span class="token operator">=</span> sinon<span class="token punctuation">.</span><span class="token function">stub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">attach</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>clickHandler<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> divArray <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndivArray<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">expect</span><span class="token punctuation">(</span>clickHandler<span class="token punctuation">.</span>called<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},194:function(n,s,a){var t=a(1),o=a(135),e=a(63).default;n.exports=a(63),n.exports.default=t(e,o,[])},63:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,o,e,p=a(0);class c extends p.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}e={},(o="components")in(t=c)?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e}.call(this,a(2))}});